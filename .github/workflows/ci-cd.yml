name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Poetry
      run: |
        pip install poetry==1.4.2
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        echo "Python version:"
        python --version
        echo "Poetry version:"
        poetry --version
        echo "Poetry configuration:"
        poetry config --list
        echo "Contents of pyproject.toml:"
        cat pyproject.toml
        echo "Attempting poetry install:"
        poetry install --no-interaction --verbose || { echo "Poetry install failed"; cat $HOME/.cache/pypoetry/log/debug.log; exit 1; }
    - name: Run test
      run: |
        poetry run pytest
    - name: Run linters
      run: |
        poetry run black --check src test
        poetry run isort --check-only src test
    #    poetry run flake8 src test
    # - name: Type check
    #   run: |
    #     poetry run mypy src

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Poetry
      run: |
        pip install poetry==1.4.2
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
    - name: Build package
      run: |
        poetry build
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.10'
  #   - name: Install Poetry
  #     run: |
  #       curl -sSL https://install.python-poetry.org | python3 -
  #       echo "$HOME/.local/bin" >> $GITHUB_PATH
  #   - name: Download artifact
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: dist
  #       path: dist
  #   - name: Deploy to PyPI
  #     env:
  #       PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #       PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     run: |
  #       poetry config pypi-token.pypi $PYPI_PASSWORD
  #       poetry publish
